# -*- coding: utf-8 -*-
"""RegresionLineal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wA1XpScgHUsiMCRkenyEr9IarNyjh2ts

#Regresion Lineal
Importacion de librerias y lectura de datos
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
#Lectura del dataset con pandas
dataset=pd.read_csv('bolivia_covid19_cases_daily.csv')
df=pd.DataFrame(dataset)

"""### Preprocesamiento eliminacion de valores nulos
Presentacion de histogramas de los datos a trabajar
"""

#Preprocesamiento eliminacion de filas con valores nulos
df.dropna(axis=0, inplace=True) # para columnas se utiliza axis = 1, inplace =  efectuar cambios
#Mostrar un histograma de los datos a trabajar
print('*'*15,'Histograma muertes',15*'*')
plt.hist(df['muertes'])
plt.show()
print('*'*15,'Histograma recuperados',15*'*')
plt.hist(df['recuperados'])
plt.show()

"""###Divicion de datos
Muertes y Recuperados
"""

#Obtenemos muertes
x = df.iloc[:,4:5].values

#Obtenemos recuperados
y=df.iloc[:,3:4].values
print(x)
print(y)
#Si se quisiera dividir datos train o test, pero en este caso no
#from sklearn.model_selection import train_test_split

"""#Modelo regresion lineal
Entrenamiento y prediccion de datos
"""

#Aplicacion de regresion lineal
from sklearn import linear_model
regresion = linear_model.LinearRegression()
#Entrenamos los datos
regresion.fit(x,y) #No lo guardamos xq no es necesario

#Guardamos en variables a + bx = y
a = regresion.intercept_
b = regresion.coef_
#print(a)
#print(b)

#Predecimos los datos
regresion.predict(x)
y_predecido = a + b*x
#print(y_predecido)

#Porcentaje de que tan ajustada se encuentra la regresion
from sklearn.metrics import r2_score
print('Ajuste r^2 : ',r2_score(y, y_predecido))

"""### Grafica muertes - recuperados"""

#Grafica de Regresion lineal 
plt.scatter(x,y, color='red')
plt.plot(x,y_predecido, color='green')
plt.xlabel('Muertes', fontsize=20)
plt.ylabel('Recuperados', fontsize=20)